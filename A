Q. Display characters 
import java.util.*;

class AsciValue {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Enter the digits:");
        
        for (int i = 0; i < 4; ++i) {
            int input = scanner.nextInt();
            System.out.println(input + "-" + (char) input);
        }
    }
}

Q.Fuel consumption 
import java.util.*;
import java.text.*;

class Main {
    private static void calculateFuelConsumption(double liter, double km) {
        DecimalFormat decimalFormat = new DecimalFormat("0.00");
        double gallon = liter * 0.2642;
        double mile = km * 0.6214;

        double literPerKm = (liter / km) * 100;
        double gallonPerKm = mile / gallon;

        System.out.println("Liters/100KM");
        System.out.println(decimalFormat.format(literPerKm));
        System.out.println("Miles/gallons");
        System.out.println(decimalFormat.format(gallonPerKm));
    }

    private static void test(double value) {
        if (value <= 0) {
            System.out.println((int) value + " is an Invalid Input");
            System.exit(0);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the no of liters to fill the tank");
        double liter = scanner.nextDouble();
        test(liter);
        System.out.println("Enter the distance covered");
        double km = scanner.nextDouble();
        test(km);
        calculateFuelConsumption(liter, km);
    }
}

Q. Highest Placement 

import java.util.*;
import java.util.stream.*;


class Placement {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int cse, ece, mech;
        
        System.out.println("Enter the no of students placed in CSE:");
        cse = scanner.nextInt();
        System.out.println("Enter the no of students placed in ECE:");
        ece = scanner.nextInt();
        System.out.println("Enter the no of students placed in MECH");
        mech = scanner.nextInt();
        
        List<Integer> list = new TreeSet<>(Arrays.asList(cse, ece, mech)).stream().collect(Collectors.toList());
        
        if (list.get(0) < 0) {
            System.out.println("Input is Invalid");
        } else if (list.size() == 1) {
            System.out.println("None of the department has got the highest placement");
        } else {
            System.out.println("Highest placement");
            
            int highest = list.get(list.size() - 1);
            
            if (list.size() == 2) {
                if (cse == highest && ece == highest) {
                    System.out.println("CSE");
                    System.out.println("ECE");
                } else if (cse == highest && mech == highest) {
                    System.out.println("CSE");
                    System.out.println("MECH");
                } else if (ece == highest && mech == highest) {
                    System.out.println("ECE");
                    System.out.println("MECH");
                } else if (cse == highest) {
                    System.out.println("CSE");
                } else if (ece == highest) {
                    System.out.println("ECE");
                } else if (mech == highest) {
                    System.out.println("MECH");
                }
            } else {
                if (cse == highest) {
                    System.out.println("CSE");
                } else if (ece == highest) {
                    System.out.println("ECE");
                } else if (mech == highest) {
                    System.out.println("MECH");
                }
            }
        }
    }
}

Q. String concatenation 
import java.util.*;
 class Authority
 {
     public static void main (String[] args) {
         Scanner sc=new Scanner(System.in);
         System.out.println("Inmate's name:");
         String name=sc.nextLine();
         System.out.println("Inmate's father's name:");
         String fname=sc.nextLine();
         name=name.concat(" ").concat(fname);
         char []chars=name.toCharArray();
         for(char c:chars)
         {
         if(Character.isDigit(c)||c=='+'||c=='!'||c=='@'||c=='#'||c=='%'||c=='$'||c=='^'||c=='&'||c=='*')
         {
            System.out.println("Invalid name");
            System.exit(0);
         }
         }
         System.out.println(name.toUpperCase());
     }
     
    }

Q least offer.
import java.util.*;

class Product implements Comparable<Product> {
    private final String name;
    private final double price;
    private final double discount;

    public Product(String name, double price, double discount) {
        this.name = name;
        this.price = price;
        this.discount = discount;
    }

    public Double getDiscountPrice() {
        return price * discount / 100;
    }

    @Override
    public int compareTo(Product other) {
        return this.getDiscountPrice().compareTo(other.getDiscountPrice());
    }

    @Override
    public String toString() {
        return name;
    }
}

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Product> products = new ArrayList<>();
        int n = scanner.nextInt();

        for (int i = 0; i < n; ++i) {
            String[] inputs = scanner.next().split(",");
            String name = inputs[0];
            double price = Double.parseDouble(inputs[1]);
            double discount = Double.parseDouble(inputs[2]);

            Product product = new Product(name, price, discount);
            products.add(product);
        }

        products.stream()
                .filter((product) -> product.getDiscountPrice().equals(Collections.min(products).getDiscountPrice()))
                .forEach(System.out::println);
    }
}


