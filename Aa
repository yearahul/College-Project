 #include<iostream>
using namespace std;

class Player
{
public:
    //Declare member variables
    int playerID;

    string playerName;

    int playedMatches;

    int playerScore;
public:
    void setplayerID(int playerID){
        this->playerID=playerID;
    }
    
    //setter
    void setplayerName(string playerName){this->playerName=playerName;}
    void setplayedMatches(int playedMatches){this->playedMatches=playedMatches;}
    void setplayerScore(int playerScore){this->playerScore=playerScore;}
    int getplayerID(){return playerID;}
    
    //getter
    string getplayerName(){return playerName;}
    int getplayedMatches(){return playedMatches;}
    int getplayerScore(){ return playerScore;}
    
    //Implement a parameterized constructor for 3 arguments - playerID, playerName and playerScore.
    Player(int playerID,string playerName, int playerScore){
      
        this->playerID=playerID;
        this->playerName=playerName;
        this->playerScore=playerScore;
    }
    
    //Implement a parameterized constructor for 4 arguments - playerID, playerName,playedMatches and playerScore.
Player(int playerID,string playerName, int playedMatches,int playerScore){
       
        this->playerID=playerID;
        this->playerName=playerName;
        this->playedMatches=playedMatches;
        this->playerScore=playerScore;
    }
    
    //display3
    void displayThreeArgument()
    {       
        cout<<"Player ID. : "<<playerID<<endl<<endl;
         cout<<"Player Name : "<<playerName<<endl<<endl;
          cout<<"Player Score : "<<playerScore<<endl<<endl;
         //Implement your code here
    }

//display4
    void displayFourArgument()
    {
       //Implement your code here
       cout<<"Player ID. : "<<playerID<<endl<<endl;
         cout<<"Player Name : "<<playerName<<endl<<endl;
          cout<<"Player Matches : "<<playedMatches<<endl<<endl;
          cout<<"Player Score : "<<playerScore<<endl<<endl;
          
    }
    
    //Implement Destructor here
 ~Player()    
        {    
            cout<<endl<<"Destructor Called"<<endl;    
        }  
};
int main(){
    
    Player p1(1001,"John",130);
    Player p2(1002,"Raj",100, 5000);
    p1.displayThreeArgument();
    cout<< "--------------------------------"<<endl<<endl;
    p2.displayFourArgument();
    
    
    //Implement your code here
    return 0;
}









 player




 #include <iostream>
using namespace std;

class BankAccount {
private:
    double _balance;
public:
    // Implement getter and setter
    virtual double withdrawal(double amount){}
    double getBalance(){
        return _balance;
    }
    void setBalance(double balance){
        _balance=balance;
    }
    
    //implement virtual method

};

class SavingsAccount:public//Add required code

    BankAccount{
        public:
        double withdrawal(double amount){
        int result=getBalance()-amount;
        setBalance(result);
        return getBalance();
        }
    
    //Implement code here
};

int main() {
    double balance,amount;
    cout<<"Enter the balance amount"<<endl;
    cin>>balance;
    cout<<"Enter the amount to withdraw"<<endl;
    cin>>amount;
    SavingsAccount obj;
    obj.setBalance(balance);
    obj.withdrawal(amount);
    cout<<"Available balance"<<obj.getBalance();
    return 0;
     // Implement your code here
}
 bank account
